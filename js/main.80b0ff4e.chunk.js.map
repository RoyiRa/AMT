{"version":3,"sources":["components/InstructionsWindow.js","components/Header.js","components/Button.js","components/Prompt.js","components/Sentence.js","components/Sentences.js","components/AddSentence.js","components/Submit.js","App.js","reportWebVitals.js","index.js"],"names":["Transition","React","props","ref","Slide","direction","FullScreenDialog","open","setOpen","handleClose","variant","className","onClick","Dialog","fullScreen","onClose","TransitionComponent","AppBar","sx","position","Toolbar","IconButton","edge","color","Typography","ml","flex","fontFamily","component","List","ListItem","ListItemText","disableTypography","primary","fontSize","DialogContentText","padding","textAlign","lineHeight","letterSpacing","Divider","fontWeight","Paper","gap","bgcolor","marginTop","Header","title","onAdd","showAdd","defaultProps","Button","text","style","backgroundColor","reactStringReplace","require","Prompt","prompt","coloredPrompt","match","i","fontStyle","Sentence","sentence","onDelete","cursor","id","Sentences","sentences","map","AddSentence","allowedWords","useState","setText","onSubmit","e","preventDefault","modifiedText","trim","toLowerCase","split","some","w","includes","alert","s","type","placeholder","value","onChange","target","Submit","feedback","setFeedback","length","document","querySelector","onsubmit","getElementById","submit","App","wordForms","showAddSentence","setShowAddSentence","setSentences","Math","floor","random","newSentence","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.80b0ff4e.chunk.js","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItem from '@mui/material/ListItem';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport Paper from '@mui/material/Paper';\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" className=\"full-description-btn\" onClick={handleClickOpen}>        \n        See Examples\n      </Button>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar sx={{ position: 'relative' }} className=\"app-bar\">\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>  \n            <Typography sx={{ ml: 2, flex: 1, fontFamily: 'Poppins'}} variant=\"h5\" component=\"div\" >\n              Full Instructions\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <List>\n          <ListItem>\n            <ListItemText disableTypography primary=\"Instructions\" sx = {{fontSize: '150%'}}/>\n          </ListItem>\n\n          <DialogContentText sx={{ ml: 2, flex: 1, fontFamily: 'Poppins', padding: 3, textAlign: 'justify', lineHeight: 2, color: 'black', fontSize: 'small'}}  component=\"div\">\n            In this HIT, you will see a sentence with at least one ‘and’, please:\n            <br/> \n            1. Split the sentence to multiple sentences by removing as many ‘and’ words as possible while preserving the sentence’s meaning, and assuring the sentences are as complete, readable, and grammatical as possible.\n            <DialogContentText sx={{ ml: 2, flex: 1, fontFamily: 'Poppins', padding: 3, textAlign: 'justify', lineHeight: 2, color: 'black', fontSize: 'small', letterSpacing: 'normal'}}  component=\"div\">\n                ● When splitting, you are restricted to words that are in the original sentence \n            <br/>\n                ● To keep grammar intact, change words to their fitting forms as needed (past/present/future, singular/plural, etc...) \n            <br/>\n                ● It is okay if you remove other words than ‘and’, or use the same word more than one time\n            <br/> \n            </DialogContentText>\n            2. Make sure each sentence consists of at least one verb.\n            <br/>\n            <br/>\n            3. Split sentences in the order you read them.\n            <br/>\n            <br/>\n            4. If preserving the meaning of the sentence is impossible, submit it as is.\n            <br/>\n            <br/>\n            NOTE: While the straightforward approach is to remove ‘and’ words, and split the sentences accordingly, notice that sometimes commas (‘,’) and other forms of punctuation should be removed too, as can be seen in the fifth Valid Example below. \n            <br/>\n            <br/>\n            TIP: A good rule of thumb is to add the removed ‘and’ word between the short sentences, and see if the meaning of the original sentence and the new long sentence is the same.\n\n          </DialogContentText>\n          <Divider />\n        \n          <ListItem>\n            <ListItemText\n              disableTypography\n              primary=\"Valid Examples\"\n              sx = {{fontSize: '150%'}}\n            />\n            </ListItem>\n                        \n            <DialogContentText sx={{ ml: 2, flex: 1, fontFamily: 'Poppins', padding: 3, textAlign: 'justify', lineHeight: 2, color: 'black', fontSize: 'small'}}  component=\"div\">\n            <Typography sx = {{fontWeight: 'bold'}}>  1. James left unhappy today and unappreciated too. </Typography>\n            ● James left unhappy today.\n            <br/> \n            ● James left unappreciated today.\n            <br/> \n            <Paper variant='outlined' sx = {{gap: 2, bgcolor: 'lightGray', padding: '16px', marginTop: '10px', fontWeight: 'bold', fontSize: 'small'}}>\n            'too' is replaced with 'today', as each sentence is standalone. \n            </Paper>\n            </DialogContentText>\n\n            <DialogContentText sx={{ ml: 2, flex: 1, fontFamily: 'Poppins', padding: 3, textAlign: 'justify', lineHeight: 2, color: 'black', fontSize: 'small'}}  component=\"div\">\n           \n            <Typography sx = {{fontWeight: 'bold'}}> 2. As of January 2013, The Times has a circulation of 399,339 and The Sunday Times of 885,612. </Typography>\n            ● As of January 2013, The Times has a circulation of 399,339. \n            <br/> \n            ● As of January 2013, The Sunday Times has a circulation of 885,612. \n            </DialogContentText>\n\n            <DialogContentText sx={{ ml: 2, flex: 1, fontFamily: 'Poppins', padding: 3, textAlign: 'justify', lineHeight: 2, color: 'black', fontSize: 'small'}}  component=\"div\">\n            <Typography sx = {{fontWeight: 'bold'}}> 3. According to the Merton Thesis, there was a positive correlation between the rise of English Puritanism and German Pietism on the one hand and early experimental science on the other. </Typography>\n            ● According to the Merton Thesis, there was a positive correlation between the rise of English Puritanism and German Pietism.\n            <br/>\n            ● According to the Merton Thesis, there was a positive correlation between the rise of English Puritanism and early experimental science.\n          </DialogContentText>\n\n          <DialogContentText sx={{ ml: 2, flex: 1, fontFamily: 'Poppins', padding: 3, textAlign: 'justify', lineHeight: 2, color: 'black', fontSize: 'small'}}  component=\"div\">\n          <Typography sx = {{fontWeight: 'bold'}}> 4. Donnie is eating pizza and Dan used to, too. </Typography>\n            ● Donnie is eating pizza.\n            <br/>\n            ● Dan used to eat pizza too.\n          </DialogContentText>\n\n          <DialogContentText sx={{ ml: 2, flex: 1, fontFamily: 'Poppins', padding: 3, textAlign: 'justify', lineHeight: 2, color: 'black', fontSize: 'small'}}  component=\"div\">\n          <Typography sx = {{fontWeight: 'bold'}}> 5. Genetic studies have found significant African female-mediated gene flow in Arab communities in the Arabian Peninsula and neighboring countries, with an average of 38% of maternal lineages in Yemen are of direct African descent, 16% in Oman-Qatar, and 10% in Saudi Arabia-United Arab Emirates. </Typography>\n            ● Genetic studies have found significant African female-mediated gene flow in Arab communities in the Arabian Peninsula and neighboring countries, with an average of 38% of maternal lineages in Yemen are of direct African descent.\n            <br/>\n            ● Genetic studies have found significant African female-mediated gene flow in Arab communities in the Arabian Peninsula and neighboring countries, with an average of 16% in Oman-Qatar.\n            <br/>\n            ● Genetic studies have found significant African female-mediated gene flow in Arab communities in the Arabian Peninsula and neighboring countries, with an average of 10% in Saudi Arabia-United Arab Emirates.\n          </DialogContentText>\n            <Divider />\n           \n            <ListItem>\n            <ListItemText\n              disableTypography\n              primary=\"Invalid Examples\"\n              sx = {{fontSize: '150%'}}\n            />\n          </ListItem>\n          <DialogContentText sx={{ ml: 2, flex: 1, fontFamily: 'Poppins', padding: 3, textAlign: 'justify', lineHeight: 2, color: 'black', fontSize: 'small'}}  component=\"div\">\n          <Typography sx = {{fontWeight: 'bold'}}> 1. In 2013, videos of the 2.5% of artists categorized as \"mega\", \"mainstream\" and \"mid-sized\" received 90.3% of the relevant views on YouTube and Vevo. </Typography>\n            ● In 2013, videos of the 2.5% of artists categorized as \"mega\" received 90.3% of the relevant views on YouTube and Vevo.\n            <br/>\n            ● In 2013, videos of the 2.5% of artists categorized as \"mainstream\" received 90.3% of the relevant views on YouTube and Vevo.\n            <br/>\n            ● In 2013, videos of the 2.5% of artists categorized as \"mid-sized\" received 90.3% of the relevant views on YouTube and Vevo. \n            <Paper variant='outlined' sx = {{gap: 2, bgcolor: 'lightGray', padding: '16px', marginTop: '10px', fontWeight: 'bold', fontSize: 'small'}}>\n            The video categories combined create 90.3% of the relevant views on YouTube and Vevo. But we do not know what are the relevant views for each category, so we cannot split them.\n            </Paper>\n          </DialogContentText>\n\n          <DialogContentText sx={{ ml: 2, flex: 1, fontFamily: 'Poppins', padding: 3, textAlign: 'justify', lineHeight: 2, color: 'black', fontSize: 'small'}}  component=\"div\">\n            <Typography sx = {{fontWeight: 'bold'}}> 2.  According to the Merton Thesis, there was a positive correlation between the rise of English Puritanism and German Pietism on the one hand and early experimental science on the other.</Typography>\n            <Paper variant='outlined' sx = {{gap: 2, bgcolor: 'lightGray', padding: '16px', marginTop: '10px', fontWeight: 'bold', fontSize: 'small'}}>\n            'English Puritanism' and 'German Pietism' are connected by the word 'between', and there is no way to remove the first ‘and’ word without changing the meaning of the sentence\n            </Paper>\n          </DialogContentText>\n\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types'\nimport InstructionsWindow from './InstructionsWindow'\nimport DialogContentText from '@mui/material/DialogContentText';\n\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <br />\n            <br/> \n            1. Split the sentence to multiple sentences by removing as many ‘and’ words as possible while preserving the sentence’s meaning, and assuring the sentences are as complete, readable, and grammatical as possible.\n            <DialogContentText sx={{ ml: 2, flex: 1, fontFamily: 'Poppins', padding: 3, textAlign: 'justify', lineHeight: 2, color: 'black', fontSize: 'small', letterSpacing: 'normal'}}  component=\"div\">\n                ● When splitting, you are restricted to words that are in the original sentence \n            <br/>\n                ● To keep grammar intact, change words to their fitting forms as needed (past/present/future, singular/plural, etc...) \n            <br/>\n                ● It is okay if you remove other words than ‘and’, or use the same word more than one time\n            <br/> \n            </DialogContentText>\n            2. Make sure each sentence consists of at least one verb.\n            <br/>\n            <br/>\n            3. Split sentences in the order you read them.\n            <br/>\n            <br/>\n            4. If preserving the meaning of the sentence is impossible, submit it as is.\n            <br/>\n            <br/>\n            NOTE: While the straightforward approach is to remove ‘and’ words, and split the sentences accordingly, notice that sometimes commas (‘,’) and other forms of punctuation should be removed too, as can be seen in the fifth Valid Example. \n            <br/>\n            <br/>\n            TIP: A good rule of thumb is to add the removed ‘and’ word between the short sentences, and see if the meaning of the original sentence and the new long sentence is the same.\n            <br/>\n            <br/>\n            <InstructionsWindow/>\n\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Sentence Segmentation',\n}\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n\nexport default Header\n\n","import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n\n    return (\n        <button \n        onClick={onClick} \n        style={{backgroundColor: color}}\n        className='btn'>\n            {text}\n        </button>\n    )\n}\nButton.defaultProps = {\n    color: 'steelblue',\n\n}\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func.isRequired,\n}\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\nimport Typography from '@mui/material/Typography';\n\nconst reactStringReplace = require('react-string-replace');\n\nconst Prompt = ({prompt, onAdd, showAdd}) => {    \n    const coloredPrompt = reactStringReplace(prompt, /\\b(and)\\b/g, (match, i) => (\n        <span key={i} style={{ color: '#9900ff' }}>{match}</span>\n      ))\n \n\n    return (\n        <div className='prompt'>\n            <Typography variant=\"h6\" component=\"h6\" sx =  {{fontFamily: 'Times New Roman; Times; Ariel', fontStyle: 'italic'}}>\n                {coloredPrompt}\n            </Typography>\n            {/* <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/> */}\n        </div>\n    )\n}\n\nexport default Prompt\n","import { FaTimes } from 'react-icons/fa'\nconst Sentence = ({ sentence, onDelete }) => {\n    return (\n        <div className={sentence}>\n            <h3>\n                {sentence.text} <FaTimes style={{ \n                color: 'red', \n                cursor: 'pointer' }}\n                onClick={() => onDelete(sentence.id)}\n                /> \n            </h3>\n        </div>\n    )\n}\n\nexport default Sentence \n","import Sentence from './Sentence'\n\nconst Sentences = ({ sentences, onDelete }) => {\n    return (\n        <>\n          {sentences.map((sentence) => (<Sentence key={sentence.id} sentence={sentence} onDelete={onDelete} />))} \n        </>\n    )\n} \n\nexport default Sentences\n"," import { useState } from 'react'\n import TextField from '@mui/material/TextField';\n\nconst AddSentence = ( {prompt, allowedWords, sentences, onAdd} ) => {\n    let [text, setText] = useState('')\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        \n        if (!text) {\n            alert('There is no text to save')\n            return\n        }\n          \n        let modifiedText = text.trim().toLowerCase()\n        let modifiedTextAsArray = modifiedText.split(\" \")\n\n        // allowedWords.push('a') // for singular forms\n\n        const notAllowedInSentence = modifiedTextAsArray.some(w => !allowedWords.includes(w)) // not even one word is in notAllowed\n        if(notAllowedInSentence) {\n            alert(\"A word or an extra backspace between words that is not in the prompt was used\")\n            return\n        }\n        \n        const isSentenceIncluded = sentences.map(s => s.text.toLowerCase()).includes(modifiedText)\n        if(isSentenceIncluded) {\n            alert(\"The exact sentence is already saved\")\n            return\n        }\n\n        onAdd({text})\n        setText('')\n    }\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Sentence</label>\n                <input type='text' placeholder='Add Sentence' value={text} onChange={(e) => setText(e.target.value)}/>\n                {/* <TextField id=\"outlined-basic\" label=\"Write Sentence...\" variant=\"outlined\" fullWidth /> */}\n            </div>\n\n            <input type='submit' value='Save Sentence' className='btn btn-block save-sentence' />\n        </form>\n        \n    )\n}\n\nexport default AddSentence\n","import { useState } from 'react'\n\nconst Submit = ({ sentences }) => {\n    const [feedback, setFeedback] = useState('')\n    sentences = sentences.map(s => +'<s> ' + s.text + ' </s>')\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (sentences.length == 0) {\n            alert('There are no sentences to submit')\n            return\n        }\n\n        document.querySelector('crowd-form').onsubmit = () => {\n            document.getElementById('data-sentences').value = sentences\n            document.getElementById('data-feedback').value = feedback\n        };\n        document.querySelector('crowd-form').submit();\n\n        setFeedback('')\n    }\n    return (\n        <form className='add-form submit-footer' onSubmit={onSubmit}>\n            <div className='submit-form-control'>\n                <label>Having Trouble? </label>\n                <input type='text' placeholder='Add Feedback' value={feedback} onChange={(e) => setFeedback(e.target.value)} />\n            </div>\n\n            <input type='submit' value='Submit' className='btn btn-block-submit' />\n        </form>\n    )\n}\n\nexport default Submit\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Prompt from './components/Prompt'\nimport Sentences from './components/Sentences'\nimport AddSentence from './components/AddSentence'\nimport Submit from './components/Submit'\n\nfunction App({prompt, wordForms}) {\n  const [showAddSentence, setShowAddSentence] = useState(true)\n  const [sentences, setSentences] = useState([])\n\n\nconst addSentence = (sentence) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newSentence = {id, ...sentence }\n  setSentences([...sentences, newSentence])\n}\n\nconst deleteSentence = (id) => {\n  setSentences(sentences.filter((sentence) => sentence.id != id))\n}\n\n  return (\n    <div className='container'>\n      <Header/>\n      <Prompt prompt={prompt} onAdd={() => setShowAddSentence(!showAddSentence)} showAdd={showAddSentence}/>\n      \n      {showAddSentence && <AddSentence prompt={prompt} allowedWords={wordForms} sentences={sentences} onAdd={addSentence} />}\n      {sentences.length ? (<Sentences sentences={sentences} onDelete={deleteSentence} />) : ''}\n      <Submit sentences={sentences}/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n// const prompt = document.getElementById('root').getAttribute('data-prompt')\n// let wordForms = document.getElementById('root').getAttribute('data-word-forms')\nlet prompt = \"The increased revenues were to be used for ' money to nourish honesty ' among local officials and for local irrigation , schools , roads , and charity . Aren't you sure of it ? I would've been .\"\nlet wordForms = ['nutritional', 'increasing', 'nutritionally', 'nutrify', 'for', 'were', 'nutritiousness', 'of', 'be', 'moneyer', 'usableness', \"isn't\", \"'\", 'nutritions',\n 'nourish', 'charities', 'honesty', 'increase', 'officiant', 'officialdoms', 'usage', 'money', 'useableness', 'usablenesses', 'irrigations', 'usances', 'usable', 'moneyers',\n  'monies', 'nutritiousnesses', 'you', 'irrigating', 'officiation', 'usance', 'am', 'monetary', 'increases', 'nourished', 'official', 'scholastics', 'schooled', 'surely', \n  'local', 'nutrients', ',', 'schooling', 'users', \"weren't\", 'it', 'sureness', 'i', 'nourishment', 'usages', 'scholastically', 'revenue', 'the', 'irrigated', 'scholasticism', \n  'being', 'officialdom', 'use', 'nutrition', 'among', 'we', 'officiate', 'serviceablenesses', 'serviceabilities', 'nutritionist', 'irrigates', 'useablenesses', 'used',\n   'useable', 'nourishes', \"would've\", 'usings', 'offices', 'and', 'officiations', 'uses', '?', 'nutritionary', 'scholastic', 'been', '.', 'officiating', 'user', 'serviceable', \n   'locality', 'locals', 'sure', 'irrigate', 'officially', 'nutritious', 'surenesses', 'schools', 'using', 'was', 'honesties', 'am not', 'serviceableness', 'serviceability', \n   'schoolings', 'road', 'beings', 'roads', 'increased', 'are', \"wasn't\", 'office', 'nutritionists', 'to', 'revenues', 'officiated', 'charity', 'officials', 'locally',\n    'scholasticisms', 'school', \"aren't\", 'officiatings', 'is', 'nourishing', 'localities', 'officiants', 'irrigation', 'nourishments', 'officiates', 'nutrient']\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App prompt={prompt} wordForms={wordForms} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}