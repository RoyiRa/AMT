(this["webpackJsonpreact-task-tracker"]=this["webpackJsonpreact-task-tracker"]||[]).push([[0],{113:function(e,t,n){"use strict";n.r(t);var s=n(0),i=n.n(s),o=n(25),r=n.n(o),a=(n(83),n(16)),c=n(44),l=n(13),u=(n(154),n(149),n(161),n(151),n(160),n(162),n(157),n(158),n(159),n(153)),d=(n(70),n(143),n(155),n(156),n(1));var b=function(e){var t=e.title;e.onAdd,e.showAdd;return Object(d.jsxs)("header",{className:"header",children:[Object(d.jsx)("h1",{children:t}),Object(d.jsx)("br",{}),Object(d.jsx)("br",{}),"1. Split the sentence to multiple sentences by removing as many \u2018and\u2019 words as possible while preserving the sentence\u2019s meaning, and assuring the sentences are as complete, readable, and grammatical as possible.","2. Make sure each sentence consists of at least one verb.",Object(d.jsx)("br",{}),Object(d.jsx)("br",{}),"3. Split sentences in the order you read them.",Object(d.jsx)("br",{}),Object(d.jsx)("br",{}),"4. If preserving the meaning of the sentence is impossible, submit it as is.",Object(d.jsx)("br",{}),Object(d.jsx)("br",{}),"NOTE: While the straightforward approach is to remove \u2018and\u2019 words, and split the sentences accordingly, notice that sometimes commas (\u2018,\u2019) and other forms of punctuation should be removed too, as can be seen in the fifth Valid Example.",Object(d.jsx)("br",{}),Object(d.jsx)("br",{}),"TIP: A good rule of thumb is to add the removed \u2018and\u2019 word between the short sentences, and see if the meaning of the original sentence and the new long sentence is the same.",Object(d.jsx)("br",{}),Object(d.jsx)("br",{})]})};b.defaultProps={title:"Sentence Segmentation"};var f=b,m=function(e){var t=e.color,n=e.text,s=e.onClick;return Object(d.jsx)("button",{onClick:s,style:{backgroundColor:t},className:"btn",children:n})};m.defaultProps={color:"steelblue"};var h=n(91),j=function(e){var t=e.prompt,n=(e.onAdd,e.showAdd,h(t,/\b(and)\b/g,(function(e,t){return Object(d.jsx)("span",{style:{color:"#9900ff"},children:e},t)})));return Object(d.jsx)("div",{className:"prompt",children:Object(d.jsx)(u.a,{variant:"h6",component:"h6",sx:{fontFamily:"Times New Roman; Times; Ariel",fontStyle:"italic"},children:n})})},p=n(71),g=function(e){var t=e.sentence,n=e.onDelete;return Object(d.jsx)("div",{className:t,children:Object(d.jsxs)("h3",{children:[t.text," ",Object(d.jsx)(p.a,{style:{color:"red",cursor:"pointer"},onClick:function(){return n(t.id)}})]})})},v=function(e){var t=e.sentences,n=e.onDelete;return Object(d.jsx)(d.Fragment,{children:t.map((function(e){return Object(d.jsx)(g,{sentence:e,onDelete:n},e.id)}))})},x=function(e){e.prompt;var t=e.allowedWords,n=e.sentences,i=e.onAdd,o=Object(s.useState)(""),r=Object(l.a)(o,2),a=r[0],c=r[1];return Object(d.jsxs)("form",{className:"add-form",onSubmit:function(e){if(e.preventDefault(),a){var s=a.trim().toLowerCase(),o=s.split(" ");if(t.push("a"),o.some((function(e){return!t.includes(e)})))alert("A word or an extra backspace between words that is not in the prompt was used");else n.map((function(e){return e.text.toLowerCase()})).includes(s)?alert("The exact sentence is already saved"):(i({text:a}),c(""))}else alert("There is no text to save")},children:[Object(d.jsxs)("div",{className:"form-control",children:[Object(d.jsx)("label",{children:"Sentence"}),Object(d.jsx)("input",{type:"text",placeholder:"Add Sentence",value:a,onChange:function(e){return c(e.target.value)}})]}),Object(d.jsx)("input",{type:"submit",value:"Save Sentence",className:"btn btn-block save-sentence"})]})},O=function(e){var t=e.sentences,n=Object(s.useState)(""),i=Object(l.a)(n,2),o=i[0],r=i[1];t=t.map((function(e){return"<s> "+e.text+" </s>"}));return Object(d.jsxs)("form",{className:"add-form submit-footer",onSubmit:function(e){e.preventDefault(),0!=t.length?(document.querySelector("crowd-form").onsubmit=function(){document.getElementById("data-sentences").value=t,document.getElementById("data-feedback").value=o},document.querySelector("crowd-form").submit(),r("")):alert("There are no sentences to submit")},children:[Object(d.jsxs)("div",{className:"submit-form-control",children:[Object(d.jsx)("label",{children:"Having Trouble? "}),Object(d.jsx)("input",{type:"text",placeholder:"Add Feedback",value:o,onChange:function(e){return r(e.target.value)}})]}),Object(d.jsx)("input",{type:"submit",value:"Submit",className:"btn btn-block-submit"})]})};var y=function(e){var t=e.prompt,n=e.wordForms,i=Object(s.useState)(!0),o=Object(l.a)(i,2),r=o[0],u=o[1],b=Object(s.useState)([]),m=Object(l.a)(b,2),h=m[0],p=m[1];return Object(d.jsxs)("div",{className:"container",children:[Object(d.jsx)(f,{}),Object(d.jsx)(j,{prompt:t,onAdd:function(){return u(!r)},showAdd:r}),r&&Object(d.jsx)(x,{prompt:t,allowedWords:n,sentences:h,onAdd:function(e){var t=Math.floor(1e4*Math.random())+1,n=Object(c.a)({id:t},e);p([].concat(Object(a.a)(h),[n]))}}),h.length?Object(d.jsx)(v,{sentences:h,onDelete:function(e){p(h.filter((function(t){return t.id!=e})))}}):"",Object(d.jsx)(O,{sentences:h})]})},w=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,163)).then((function(t){var n=t.getCLS,s=t.getFID,i=t.getFCP,o=t.getLCP,r=t.getTTFB;n(e),s(e),i(e),o(e),r(e)}))};r.a.render(Object(d.jsx)(i.a.StrictMode,{children:Object(d.jsx)(y,{prompt:"The increased revenues were to be used for ' money to nourish honesty ' among local officials and for local irrigation , schools , roads , and charity . Aren't you sure of it ? I would've been .",wordForms:["nutritional","increasing","nutritionally","nutrify","for","were","nutritiousness","of","be","moneyer","usableness","isn't","'","nutritions","nourish","charities","honesty","increase","officiant","officialdoms","usage","money","useableness","usablenesses","irrigations","usances","usable","moneyers","monies","nutritiousnesses","you","irrigating","officiation","usance","am","monetary","increases","nourished","official","scholastics","schooled","surely","local","nutrients",",","schooling","users","weren't","it","sureness","i","nourishment","usages","scholastically","revenue","the","irrigated","scholasticism","being","officialdom","use","nutrition","among","we","officiate","serviceablenesses","serviceabilities","nutritionist","irrigates","useablenesses","used","useable","nourishes","would've","usings","offices","and","officiations","uses","?","nutritionary","scholastic","been",".","officiating","user","serviceable","locality","locals","sure","irrigate","officially","nutritious","surenesses","schools","using","was","honesties","am not","serviceableness","serviceability","schoolings","road","beings","roads","increased","are","wasn't","office","nutritionists","to","revenues","officiated","charity","officials","locally","scholasticisms","school","aren't","officiatings","is","nourishing","localities","officiants","irrigation","nourishments","officiates","nutrient"]})}),document.getElementById("root")),w()},83:function(e,t,n){}},[[113,1,2]]]);
//# sourceMappingURL=main.426f09be.chunk.js.map